Index: lib/src/main/java/linked/list/Node.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package linked.list;\r\n\r\npublic class Node {\r\npublic int value;\r\nNode next;\r\n\r\n    public Node(int value, Node next) {\r\n        this.value = value;\r\n        this.next = next;\r\n    }\r\n\r\n    public int getValue() {\r\n        return value;\r\n    }\r\n\r\n    public void setValue(int value) {\r\n        this.value = value;\r\n    }\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/lib/src/main/java/linked/list/Node.java b/lib/src/main/java/linked/list/Node.java
--- a/lib/src/main/java/linked/list/Node.java	(revision 033820ec31893fc4f9327202db210687bf8bd0c8)
+++ b/lib/src/main/java/linked/list/Node.java	(date 1626198893390)
@@ -1,19 +1,11 @@
 package linked.list;
 
-public class Node {
-public int value;
-Node next;
-
-    public Node(int value, Node next) {
-        this.value = value;
-        this.next = next;
-    }
+public class Node<T> {
+    public Node next;
+    public T data;
 
-    public int getValue() {
-        return value;
-    }
-
-    public void setValue(int value) {
-        this.value = value;
+    public Node( T data) {
+        this.data = data;
+        this.next = null;
     }
 }
Index: lib/src/main/java/linked/list/Library.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>/*\n * This Java source file was generated by the Gradle 'init' task.\n */\npackage linked.list;\n\n\npublic class Library {\n    public boolean someLibraryMethod() {\n        return true;\n    }\n\n    public static void main(String[] args) {\n//        for test main\n        System.out.println(\"maryam\");\n\n        LinkedList linkedList = new LinkedList(new Node(1,null));\n        linkedList.insert(new Node(2,null));\n        linkedList.insert(new Node(3,null));\n        linkedList.insert(new Node(4,null));\n//        System.out.println(linkedList);\n        linkedList.show();\n//        4 include so it will print true\n        if(linkedList.search(linkedList.head,4)){\n            System.out.println(\"True\");\n        }else{\n            System.out.println(\"False\");\n        }\n//        5 it not include so it will print false\n        if(linkedList.search(linkedList.head,5)){\n\n            System.out.println(\"True\");\n        }else{\n            System.out.println(\"False\");\n        }\n        System.out.print(linkedList);\n    }\n    }\n\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/lib/src/main/java/linked/list/Library.java b/lib/src/main/java/linked/list/Library.java
--- a/lib/src/main/java/linked/list/Library.java	(revision 033820ec31893fc4f9327202db210687bf8bd0c8)
+++ b/lib/src/main/java/linked/list/Library.java	(date 1626121327930)
@@ -17,6 +17,10 @@
         linkedList.insert(new Node(2,null));
         linkedList.insert(new Node(3,null));
         linkedList.insert(new Node(4,null));
+
+// for code challeng 06
+
+        linkedList.append(7);
 //        System.out.println(linkedList);
         linkedList.show();
 //        4 include so it will print true
@@ -33,6 +37,9 @@
             System.out.println("False");
         }
         System.out.print(linkedList);
+
     }
+
+
     }
 
Index: lib/src/main/java/linked/list/LinkedList.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package linked.list;\r\n\r\npublic class LinkedList {\r\n    Node head;\r\n\r\n\r\n    public LinkedList(Node head) {\r\n        this.head = head;\r\n    }\r\n\r\n    public void insert(Node newNode){\r\n        newNode.next= head;\r\n        head =newNode;\r\n    }\r\n\r\n\r\n    public void show() {\r\n        Node newOne = head;\r\n        while(newOne != null) {\r\n            System.out.println(newOne.value);\r\n            newOne = newOne.next;\r\n        }\r\n    }\r\n\r\n    public boolean search(Node head, int element) {\r\n        Node newOne = head;\r\n\r\n        while (newOne != null)\r\n        {\r\n            if (newOne.getValue() == element){\r\n                return true;\r\n            }\r\n            newOne = newOne.next ;\r\n        }\r\n        return false;\r\n    }\r\n\r\n\r\n    public String toString(){\r\n        String result = \"\";\r\n        Node newOne = head;\r\n        while(newOne != null){\r\n            result +=\"{\";\r\n            result += newOne.value;\r\n            result +=\"}\";\r\n            result += \" -> \";\r\n            newOne = newOne.next;\r\n        }\r\n        result += \"Null\";\r\n        return result;\r\n    }\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/lib/src/main/java/linked/list/LinkedList.java b/lib/src/main/java/linked/list/LinkedList.java
--- a/lib/src/main/java/linked/list/LinkedList.java	(revision 033820ec31893fc4f9327202db210687bf8bd0c8)
+++ b/lib/src/main/java/linked/list/LinkedList.java	(date 1626194786510)
@@ -35,6 +35,20 @@
         return false;
     }
 
+    public void append(int value) {
+        Node newOne = new Node(value, head.next);
+        if (head == null)
+        {
+            head = head.next;
+            return;
+        }
+        newOne.next = null;
+        Node last = head;
+        while (last.next != null)
+            last = last.next;
+        last.next = newOne;
+        return;
+    }
 
     public String toString(){
         String result = "";
@@ -46,7 +60,9 @@
             result += " -> ";
             newOne = newOne.next;
         }
-        result += "Null";
+        result += "x";
         return result;
     }
+
+
 }
